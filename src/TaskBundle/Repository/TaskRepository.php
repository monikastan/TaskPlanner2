<?php

namespace TaskBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository {

    public function findTaskByUser($id) {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT t FROM TaskBundle:Task t WHERE t.user = :id ORDER BY t.deadline DESC");
        $query->setParameter('id', $id);
        $tasks = $query->getResult();
        return $tasks;
    }

    public function findTaskByUserAndDay($id) {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT t FROM TaskBundle:Task t WHERE t.user = :id AND t.deadline = CURRENT_DATE()");
        $query->setParameter('id', $id);
        $tasks = $query->getResult();
        return $tasks;
    }

    public function findTasks($id, $name, $desc, $dateFrom, $dateTo, $deadlineFrom, $deadlineTo, $priority, $category, $status) {
        $em = $this->getEntityManager();
        $q = "SELECT t FROM TaskBundle:Task t WHERE t.user = :id";

        if ($name != null) {
            $q = $q . " AND t.name LIKE :name";
        }
        if ($desc != null) {
            $q = $q . " AND t.description LIKE :desc";
        }
        if ($dateFrom != null) {
            $q = $q . " AND t.date >= :dateFrom";
        }
        if ($dateTo != null) {
            $q = $q . " AND t.date <= :dateTo";
        }
        if ($deadlineFrom != null) {
            $q = $q . " AND t.deadline >= :deadlineFrom";
        }
        if ($deadlineTo != null) {
            $q = $q . " AND t.deadline <= :deadlineTo";
        }
        if ($priority != null) {
            $q = $q . " AND t.priority = :priority";
        }
        if ($category != null) {
            $q = $q . " AND t.category = :category";
        }
        if ($status != null) {
            $q = $q . " AND t.status = :status";
        }

        $query = $em->createQuery($q);

        $query->setParameter('id', $id);
        if ($name != null) {
            $query->setParameter('name', "%" . strtoupper(trim($name)) . "%");
        }
        if ($desc != null) {
            $query->setParameter('desc', "%" . strtoupper(trim($desc)) . "%");
        }
        if ($dateFrom != null) {
            $query->setParameter('dateFrom', $dateFrom);
        }
        if ($dateTo != null) {
            $query->setParameter('dateTo', $dateTo);
        }
        if ($deadlineFrom != null) {
            $query->setParameter('deadlineFrom', $deadlineFrom);
        }
        if ($deadlineTo != null) {
            $query->setParameter('deadlineTo', $deadlineTo);
        }
        if ($priority != null) {
            $query->setParameter('priority', $priority);
        }
        if ($category != null) {
            $query->setParameter('category', $category);
        }
        if ($status != null) {
            $query->setParameter('status', $status);
        }

        $tasks = $query->getResult();
        return $tasks;
    }

    public function findDelayTask() {

//        SELECT u.username, u.email, t.date, t.deadline, t.name  FROM `task` as t, fos_user as u 
//        WHERE t.user_id = u.id AND t.deadline < now() and t.status_id <> 5 ORDER by u.email
        
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT t FROM TaskBundle:Task t WHERE t.deadline < CURRENT_DATE()");
        
        $tasks = $query->getResult();
        
        return $tasks;
    }

}
